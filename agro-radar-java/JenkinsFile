pipeline {
    agent any // Ou especifique um label para um agente habilitado para Docker
    environment {
        IMAGE_NAME = 'agro-radar-java'
        IMAGE_TAG  = "${env.BUILD_NUMBER}"
        DOCKER_REGISTRY = 'seu-registro-docker.com' // Substitua pelo seu registro
        DOCKER_CREDENTIALS_ID = 'suas-credenciais-docker-id' // ID das credenciais do Jenkins
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def dockerImage = docker.build("${IMAGE_NAME}:${IMAGE_TAG}", ".")
                }
            }
        }

        stage('Run Container (Opcional - para teste)') {
            steps {
                script {
                    sh "docker run -d --name ${IMAGE_NAME}_container -p 8080:8080 ${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }

        stage('Push Docker Image') {
            when {
                expression { return env.BRANCH_NAME == 'main' }
            }
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: "${DOCKER_CREDENTIALS_ID}", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        docker.withRegistry("https://${DOCKER_REGISTRY}", DOCKER_CREDENTIALS_ID) {
                            dockerImage.push("${IMAGE_TAG}")
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
        failure {
            script {
                sh "docker rm -f ${IMAGE_NAME}_container || true" // Só se você executou um container
            }
        }
    }
}